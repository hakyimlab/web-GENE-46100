{
  "hash": "438595011a47c0e336046a1276182ea2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Embeddings Analysis\"\ndate: \"2025-04-23\"\nauthor: Haky Im\nfreeze: true\n---\n\n\n\n** embeddings provided by Henry from his DNA GPT model**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressMessages(library(tidyverse))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'purrr' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'lubridate' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nsuppressMessages(library(glue))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'glue' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nsuppressMessages(library(ggrepel))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'ggrepel' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\n# suppressMessages(library(qvalue))\n# suppressMessages(library(devtools))\n# suppressMessages(source_gist(\"38431b74c6c0bf90c12f\")) ## get qqunif\n# suppressMessages(library(googlesheets4))\n\n\nWEBDATA = \"/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data\"\n\nDATA = glue(\"{WEBDATA}/web-GENE-46100\")\n\nif(!file.exists(DATA)) system(glue::glue(\"mkdir {DATA}\"))\n##system(glue(\"open {DATA}\")) ## this will open the folder \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nembeddings = read_csv(glue(\"{DATA}/henry-dna-gpt-embed_df.csv.gz\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\nRows: 40 Columns: 385\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(1): ...1 dbl (384): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n17, 18,...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(embeddings)[1] = \"token\"\n\nunique(embeddings$token)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"\\n\" \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \">\"  \"A\"  \"B\"  \"C\" \n[16] \"G\"  \"H\"  \"I\"  \"J\"  \"K\"  \"L\"  \"M\"  \"N\"  \"T\"  \"U\"  \"X\"  \"Y\"  \"_\"  \"a\"  \"c\" \n[31] \"d\"  \"g\"  \"h\"  \"l\"  \"m\"  \"n\"  \"o\"  \"r\"  \"t\"  \"v\" \n```\n\n\n:::\n\n```{.r .cell-code}\nsvdfit = svd(embeddings[,-1])\n```\n:::\n\n\n\n> ACGT cluster togeter, acgt also cluster together.\n\n> N is closer to ACGT and acgt, probably because of N appears more frequently than the remainig tokens.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng2file = FALSE\n\n# if(png2file) png(glue(\"{DATA}/svd-plot.png\"), width=1000, height=1000)\n# plot(svdfit$u[,1], svdfit$u[,2], type=\"n\", xlab=\"\", ylab=\"\", main=\"SVD of DNA sequence embeddings\")\n# text(svdfit$u[,1], svdfit$u[,2], embeddings$token, cex=1)\n# if(png2file) dev.off()\n\n# plot(svdfit$v[,1],svdfit$v[,2],type=\"n\",xlab=\"\",ylab=\"\",main=\"SVD of DNA sequence embeddings\")\n# text(svdfit$v[,1],svdfit$v[,2],names(embeddings)[-1],cex=2)\n\n\n# Create a data frame for plotting\nplot_data <- data.frame(\n  x = svdfit$u[,1],\n  y = svdfit$u[,2],\n  label = embeddings$token\n)\n\n# Create the plot\nggplot(plot_data, aes(x = x, y = y, label = label)) +\n  geom_point(alpha = 0.5) +\n  geom_label_repel(\n    size = 4,\n    max.overlaps = 20,\n    box.padding = 0.5,\n    point.padding = 0.5,\n    segment.color = 'grey50',\n    segment.alpha = 0.5,\n    fill = \"white\",\n    alpha = 0.8,\n    label.size = 0.2\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"SVD of DNA Sequence Embeddings\",\n    x = \"First Principal Component\",\n    y = \"Second Principal Component\"\n  ) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    panel.grid = element_line(color = \"grey90\")\n  )\n```\n\n::: {.cell-output-display}\n![](embeding-analysis_files/figure-html/svd-plot-ggplot-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# Save to file if needed\nif(png2file) {\n  ggsave(\n    glue(\"{DATA}/svd-plot-ggplot.png\"),\n    width = 10,\n    height = 10,\n    dpi = 300\n  )\n}\n```\n:::\n",
    "supporting": [
      "embeding-analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}