{
  "hash": "7b13d04321236e88ab85c18cd5e98917",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: preparing environment for unit 00\nauthor: Haky Im\ndate: 2025-03-24\ndescription: setting up conda environement and installing packages\ncategories:\n  - gene46100\n  - how-to\neval: false\n---\n\n\n\n\n## install conda\n\n\n\n\n```{bash}\n\n## download miniconda from the command line\n\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh\n\n## or manually from https://www.anaconda.com/docs/getting-started/miniconda/main\n\n## install miniconda\nbash Miniconda3-latest-Linux-x86_64.sh\n\n```\n\n\n\n\n## create conda environment\n\n\n\n```{bash}\nconda create -n gene46100 python=3.12\nconda activate gene46100\n\n```\n\n\n\n\n## do not install packages with conda\n(I ran into lots of issues with torch version incompatibility with torchvision and torchmetrics)\n\n\n\n```{bash}\n# DONT USE CONDA TO INSTALL PYTORCH at least for now\n# conda install scikit-learn plotnine pytorch \n\n## installing torchvision and torchmetrics forced downgrading torch to 2.3.1 which was not compatible with mps\n\n```\n\n\n\n\n## install all packages within jupyter notebook with %pip\nas of 2025-03-24\n\nusing %pip will make sure that the packages are accessible by the kernel you are using for the jupyter notebook\n\n\n\n```{bash}\n%pip install scikit-learn plotnine tqdm pandas \n%pip install torch\n%pip install torchvision\n%pip install torchmetrics\n```\n\n\n\n\n\n## install cursor or vscode to run the jupyter notebook\n\n- install the python extension for cursor or vscode.\n\n- select the python interpreter to be the one in the conda environment you created (gene46100)\n\n\n## Save the environment for reproducibility\n\n### to reproduce the environment exactly, save the environment\n\n\n\n```{bash}\n# Save conda packages with their sources\nconda env export --from-history > environment-gene46100.yml\n\n# Save pip-installed packages separately\npip list --format=freeze > requirements-gene46100.txt\n\n# Save full environment state (for reference)\nconda env export > environment_full-gene46100.yml\n```\n\n\n\n\n## DO NOT RUN THE FOLLOWING UNLESS NEED TO REINSTALL THE ENVIRONMENT FOR SOME REASON\n\n#### reinstall the environment\n\n\n\n```{bash}\n# Create environment from conda packages\nconda env create -f environment-gene46100.yml\n\n# Activate the environment\nconda activate gene46100\n\n# Install pip packages\npip install -r requirements-gene46100.txt\n\n```\n\n\n\n\n## configuration to run python in qmd files\n\nFollow instructions in https://thedatasavvycorner.com/blogs/08-quarto-conda-en copied to /DRAFTS/2025-02-20-testin/08-quarto-conda-env.qmd\n\nBelow is a shortened version of the instructions when you already have a conda environment.\n\n\n\n```{bash, eval=false}\nconda activate gene46100\npip install nbclient nbformat\n\n# Use conda to install the nb_conda_kernels package. This is used to manage python jupyter kernels for notebooks.\n\nconda install nb_conda_kernels\n\n# Copy the path returned from the below command\njupyter --config-dir\n\n# in my case it was ~/.jupyter\n\n# Create a jupyter_config.json in the jupyter config directory:\ntouch ~/.jupyter/jupyter_config.json\necho '{\n  \"CondaKernelSpecManager\": {\n    \"kernelspec_path\": \"--user\"\n  }\n}' >> ~/.jupyter/jupyter_config.json\n\n# Run the below command to return a list of available kernels:\npython -m nb_conda_kernels list\n\n# Copy the name (not the path) for the environment that you created with the format `conda-env-<YOUR_ENV_NAME>-py`.\n```\n\n\n\n\nadd the following to the yaml header in the qmd file with python blocks\n```\njupyter: \n  kernelspec:\n    name: \"conda-env-<YOUR_ENV_NAME>-py\"\n    language: \"python\"\n    display_name: \"<YOUR_ENV_NAME>\"\n```\n\n my environment was conda-env-gene46100-py\n you can run quarto render and it will be rendered with the conda environment you specified\n when running interactively, you can choose the kernel, similarly to a jupyter notebook\n\n\n\n\n```{yaml}\njupyter: \n  kernelspec:\n    name: \"conda-env-gene46100-py\"\n    language: \"python\"\n    display_name: \"gene46100\"\nfreeze: true\n## you may want to choose freeze true if you don't want to run the code every time you render the qmd file\n\n```\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}